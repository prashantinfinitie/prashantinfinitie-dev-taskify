## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Priority Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/priorities/{id?}'
    metadata:
      groupName: 'Priority Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List or search priorities.'
      description: 'This endpoint retrieves a list of priorities based on various filters. The user must be authenticated to perform this action. The request allows searching and sorting by different parameters.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
    urlParameters:
      id:
        name: id
        description: 'optional The ID of the priority to retrieve.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      search:
        name: search
        description: 'optional The search term to filter priorities by title or id.'
        required: false
        example: High
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      sort:
        name: sort
        description: 'optional The field to sort by. Defaults to "id". Sortable fields include: id, title, color, created_at, and updated_at.'
        required: false
        example: title
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      order:
        name: order
        description: 'optional The sort order, either "ASC" or "DESC". Defaults to "DESC".'
        required: false
        example: ASC
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      limit:
        name: limit
        description: 'optional The number of priorities per page for pagination.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      offset:
        name: offset
        description: 'optional The offset for pagination, indicating the starting point of results.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      search: High
      sort: title
      order: ASC
      limit: 10
      offset: 0
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Priorities retrieved successfully",
            "total": 1,
            "data": [
              {
                "id": 1,
                "title": "High",
                "color": "primary",
                "created_at": "20-07-2024 17:50:09",
                "updated_at": "21-07-2024 19:08:16"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "Priority not found",
            "total": 0,
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "Priorities not found",
            "total": 0,
            "data": []
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vEchfV1dP5kgZa46a863eDb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/priority/store
    metadata:
      groupName: 'Priority Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new priority.'
      description: 'This endpoint allows authenticated users to create a new priority with a unique slug.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the priority.'
        required: true
        example: quo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      color:
        name: color
        description: 'The color code associated with the priority.'
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: quo
      color: qui
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Priority created successfully.",
            "id": 101,
            "priority": {
              "id": 101,
              "title": "High",
              "color": "primary",
              "slug": "high"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "error": true,
            "message": "Validation errors occurred.",
            "errors": {
              "title": ["The title field is required."],
              "color": ["The color field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Priority couldn't be created."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Vab4ca1e5fEd66D8k3hgPvZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/priority/update
    metadata:
      groupName: 'Priority Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing priority.'
      description: 'This endpoint allows authenticated users to update a priority, including modifying the title and color.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The ID of the priority to update.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      title:
        name: title
        description: 'The updated title of the priority.'
        required: true
        example: ducimus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      color:
        name: color
        description: 'The updated color code associated with the priority.'
        required: true
        example: soluta
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      id: 2
      title: ducimus
      color: soluta
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Priority updated successfully.",
            "id": 101
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": true,
            "message": "Priority not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "error": true,
            "message": "Validation errors occurred.",
            "errors": {
              "id": ["The id field is required."],
              "title": ["The title field is required."],
              "color": ["The color field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Priority couldn't be updated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b5E3ZcaPakfd6h18D4Vegv6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/priority/get/{id}'
    metadata:
      groupName: 'Priority Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get details of a specific priority.'
      description: 'This endpoint retrieves the details of a specific priority.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
    urlParameters:
      id:
        name: id
        description: 'The ID of the priority to retrieve.'
        required: true
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 13
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Priority retrieved successfully.",
            "priority": {
              "id": 101,
              "title": "High",
              "color": "#ff0000",
              "slug": "high",
              "created_at": "2025-03-04 14:00:00",
              "updated_at": "2025-03-04 16:00:00"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": true,
            "message": "Priority not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Could not retrieve priority."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6Za5d3afV81PhDcvebkEg46'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/priority/destroy/{id}'
    metadata:
      groupName: 'Priority Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a priority.'
      description: |-
        This endpoint allows authenticated users to delete a specific priority.
        Before deletion, all associated projects and tasks will have their `priority_id` set to `null`.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
    urlParameters:
      id:
        name: id
        description: 'The ID of the priority to delete.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Priority deleted successfully.",
            "id": 101,
            "title": "High"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": true,
            "message": "Priority not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Priority couldn't be deleted."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kv14f6h8aZPadbV3e6cEDg5'
    controller: null
    method: null
    route: null
    custom: []
