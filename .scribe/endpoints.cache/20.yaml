## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Todo Management'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/todos/store
    metadata:
      groupName: 'Todo Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new todo.'
      description: 'This endpoint creates a new todo item with the specified title, priority, and description. The user must be authenticated to perform this action.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the todo.'
        required: true
        example: 'Finish report'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      priority:
        name: priority
        description: 'The priority of the todo. Must be one of "low", "medium", or "high".'
        required: true
        example: medium
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      description:
        name: description
        description: 'optional A description of the todo.'
        required: false
        example: 'Complete the report by end of day'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      title: 'Finish report'
      priority: medium
      description: 'Complete the report by end of day'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "error": false,
          "message": "Todo created successfully.",
          "id": 36,
          "data": {
            "id": 36,
            "title": "test",
            "description": "test",
            "priority": "low",
            "is_completed": 0,
            "created_at": "07-08-2024 16:30:09",
            "updated_at": "07-08-2024 16:30:09"
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "error": true,
            "message": "Validation errors occurred",
            "errors": {
              "title": [
                "The title field is required."
              ],
              "priority": [
                "The priority must be one of the following: low, medium, high."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "An error occurred while creating the todo."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6bcd1vVZ3eDPE6aa48fk5hg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/todos/{id?}'
    metadata:
      groupName: 'Todo Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List or search todos.'
      description: 'This endpoint retrieves a list of todos based on various filters. The user must be authenticated to perform this action. The request allows filtering by search term, status, and pagination parameters.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
    urlParameters:
      id:
        name: id
        description: 'optional The ID of the todo to retrieve.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      search:
        name: search
        description: 'optional The search term to filter todos by id, title, or description.'
        required: false
        example: Test
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      sort:
        name: sort
        description: 'optional The field to sort by. Defaults to "is_completed". All fields are sortable.'
        required: false
        example: created_at
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      order:
        name: order
        description: 'optional The sort order, either "asc" or "desc". Defaults to "desc".'
        required: false
        example: asc
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      status:
        name: status
        description: 'optional The status to filter todos by.'
        required: false
        example: completed
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      limit:
        name: limit
        description: 'optional The number of todos per page for pagination. Defaults to 10.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      offset:
        name: offset
        description: 'optional The offset for pagination, indicating the starting point of results. Defaults to 0.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      search: Test
      sort: created_at
      order: asc
      status: completed
      limit: 10
      offset: 0
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "error": false,
              "message": "Todos retrieved successfully.",
              "total": 1,
              "data": [
                  {
                       "id": 35,
                       "title": "test",
                       "description": "test",
                       "priority": "low",
                       "is_completed": 0,
                       "created_at": "07-08-2024 15:28:22",
                       "updated_at": "07-08-2024 15:28:22"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
              "error": true,
              "message": "Todo not found.",
              "total": 0,
              "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "Todos not found",
            "total": 0,
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "error": true,
              "message": "An error occurred while retrieving the todos."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3ah84dD5cvZabEfe66kPgV1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/todos/update
    metadata:
      groupName: 'Todo Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing todo.'
      description: 'This endpoint updates an existing todo item with the specified title, priority, and description. The user must be authenticated to perform this action.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The ID of the todo to be updated.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      title:
        name: title
        description: 'The new title of the todo.'
        required: true
        example: 'Finish report'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      priority:
        name: priority
        description: 'The new priority of the todo. Must be one of "low", "medium", or "high".'
        required: true
        example: medium
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      description:
        name: description
        description: 'optional A new description for the todo.'
        required: false
        example: 'Complete the report by end of day'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      id: 1
      title: 'Finish report'
      priority: medium
      description: 'Complete the report by end of day'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "error": false,
          "message": "Todo updated successfully.",
          "id": "36",
          "data": {
            "id": 36,
            "is_completed": 0,
            "title": "test",
            "priority": "low",
            "description": "test",
            "created_at": "07-08-2024 16:30:09",
            "updated_at": "07-08-2024 16:30:09"
          }
          }

          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "error": true,
            "message": "Validation errors occurred",
            "errors": {
              "id": [
                "The id field is required."
              ],
              "title": [
                "The title field is required."
              ],
              "priority": [
                "The priority must be one of the following: low, medium, high."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "An error occurred while updating the todo."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5Pe4ZDvd8361c6aaEgbkhfV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/todos/{id}/status'
    metadata:
      groupName: 'Todo Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the completion status of a todo.'
      description: 'This endpoint updates the completion status of a specified todo item. The user must be authenticated to perform this action.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
      Content-Type: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the todo whose status is to be updated.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status:
        name: status
        description: 'The new completion status of the todo.'
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      status: true
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "error": false,
          "message": "Status updated successfully.",
          "id": "60",
          "activity_message": "Madhavan Vaidya marked todo iouyhgyu as Completed",
          "data": {
          "id": 60,
          "title": "iouyhgyu",
          "description": "ty8uifyu",
          "priority": "medium",
          "is_completed": 1,
          "created_at": "10-08-2024 10:28:59",
          "updated_at": "12-08-2024 18:08:14"
          }

          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "error": true,
            "message": "Validation errors occurred",
            "errors": {
              "id": [
                "The id field is required."
              ],
              "status": [
                "The status field is required."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Status couldn't be updated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Vhckb3f4e1Pa6Dv5a8Z6dgE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/todos/{id}/priority'
    metadata:
      groupName: 'Todo Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the priority of a todo.'
      description: "This endpoint updates the priority of a specified todo item. The user must be authenticated to perform this action. The priority must be one of 'low', 'medium', or 'high'."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
      Content-Type: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the todo whose priority is to be updated.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      priority:
        name: priority
        description: "The new priority of the todo. Must be one of 'low', 'medium', or 'high'."
        required: true
        example: medium
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      priority: medium
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "error": false,
          "message": "Priority updated successfully.",
          "id": "60",
          "activity_message": "Madhavan Vaidya updated the priority of todo iouyhgyu from High to Low",
          "data": {
          "id": 60,
          "title": "iouyhgyu",
          "description": "ty8uifyu",
          "priority": "low",
          "is_completed": 1,
          "created_at": "10-08-2024 10:28:59",
          "updated_at": "12-08-2024 18:11:13"
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "error": true,
            "message": "Validation errors occurred",
            "errors": {
              "id": [
                "The id field is required."
              ],
              "priority": [
                "The priority field is required.",
                "The selected priority is invalid."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Priority couldn't be updated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1E5f664daeZ3aPbVgkhDcv8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/todos/destroy/{id}'
    metadata:
      groupName: 'Todo Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified todo.'
      description: 'This endpoint deletes a todo item based on the provided ID. The user must be authenticated to perform this action.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
    urlParameters:
      id:
        name: id
        description: 'The ID of the todo to be deleted.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Todo deleted successfully.",
            "id": 1,
            "title": "Todo Title"
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "Todo not found.",
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "An error occurred while deleting the todo."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer f6ZEh8v1D3daVcPb5e4g6ak'
    controller: null
    method: null
    route: null
    custom: []
