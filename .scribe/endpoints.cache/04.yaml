## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Profile Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: 'Profile Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Retrieve the authenticated user's profile."
      description: 'This endpoint returns the profile information of the currently authenticated user. The user must be authenticated to access their profile details.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "error": false,
          "message": "Profile details retrieved successfully",
          "data": {
          "id": 7,
          "first_name": "Madhavan",
          "last_name": "Vaidya",
          "role": "admin",
          "email": "admin@gmail.com",
          "phone": "9099882203",
          "dob": "17-06-2024",
          "doj": "03-10-2022",
          "address": "Devonshire",
          "city": "Windsor",
          "state": "ON",
          "country": "Canada",
          "zip": "123654",
          "photo": "https://test-taskify.infinitietech.com/storage/photos/yxNYBlFLALdLomrL0JzUY2USPLILL9Ocr16j4n2o.png",
          "status": 1,
          "created_at": "03-01-2023 10:37:20",
          "updated_at": "13-08-2024 14:16:45",
          "assigned": {
          "projects": 11,
          "tasks": 9
          },
          "is_admin_or_leave_editor": true,
          "is_admin_or_has_all_data_access": true
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ZVaP1hdvEae6b64k358gfcD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users/photo
    metadata:
      groupName: 'Profile Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the profile picture of a logged-in user or a specified user/client.'
      description: |-
        This endpoint allows the authenticated user to update their profile picture.
        If both `id` and `type` are provided, the profile picture for the specified user or client will be updated.
        If not, the profile picture of the logged-in user will be updated.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
      Content-Type: multipart/form-data
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The ID of the user or client whose profile picture is being updated. Required if `type` is provided.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      type:
        name: type
        description: "The type of the entity whose profile picture is being updated. Must be either 'user' or 'client'."
        required: true
        example: user
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      upload:
        name: upload
        description: 'The file of the new profile picture to be uploaded.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      id: 1
      type: user
    fileParameters:
      upload: null
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Profile picture updated successfully.",
            "data": {
              "id": 7,
              "first_name": "Madhavan",
              "last_name": "Vaidya",
              "role": "admin",
              "email": "admin@gmail.com",
              "phone": "9099882203",
              "dob": "17-06-2024",
              "doj": "03-10-2022",
              "address": "Devonshire",
              "city": "Windsor",
              "state": "ON",
              "country": "Canada",
              "zip": "123654",
              "photo": "https://test-taskify.infinitietech.com/storage/photos/atEj9NKCeAJhM5VqBN69mFKHntHbZkPUl2Sa22RA.webp",
              "status": 1,
              "created_at": "03-01-2023 10:37:20",
              "updated_at": "13-08-2024 18:58:34",
              "assigned": {
                "projects": 11,
                "tasks": 21
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "No profile picture selected!"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "User not found",
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Profile picture couldn't be updated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z3f6acebDahVkgd81P45E6v'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/users/{id}/profile'
    metadata:
      groupName: 'Profile Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the profile details of a logged-in user.'
      description: 'This endpoint allows the authenticated user to update their profile details such as name, email, address, and other relevant information.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
      Content-Type: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user whose profile is being updated.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: "The user's first name."
        required: true
        example: Madhavan
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      last_name:
        name: last_name
        description: "The user's last name."
        required: true
        example: Vaidya
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: "The user's email address. Can only be edited if `is_admin_or_has_all_data_access` is true for the logged-in user."
        required: true
        example: admin@gmail.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      role:
        name: role
        description: 'The ID of the role for the user. If the authenticated user is an admin, the provided role will be used. If the authenticated user is not an admin, the current role of the user will be used, regardless of the input.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone:
        name: phone
        description: "The user's phone number."
        required: false
        example: '9099882203'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      country_code:
        name: country_code
        description: 'The country code for the phone number.'
        required: false
        example: '+91'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      country_iso_code:
        name: country_iso_code
        description: 'nullable The ISO code for the phone number.'
        required: false
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      dob:
        name: dob
        description: "The user's date of birth."
        required: false
        example: 17-06-2024
        type: date
        enumValues: []
        exampleWasSpecified: true
        custom: []
      doj:
        name: doj
        description: "The user's date of joining."
        required: false
        example: 03-10-2022
        type: date
        enumValues: []
        exampleWasSpecified: true
        custom: []
      address:
        name: address
        description: "The user's address."
        required: false
        example: Devonshire
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      city:
        name: city
        description: "The user's city."
        required: false
        example: Windsor
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      state:
        name: state
        description: "The user's state."
        required: false
        example: 'ON'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      country:
        name: country
        description: "The user's country."
        required: false
        example: Canada
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      zip:
        name: zip
        description: "The user's zip code."
        required: false
        example: '123654'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: "The user's new password (if changing)."
        required: false
        example: '12345678'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The password confirmation (if changing password).'
        required: false
        example: '12345678'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      first_name: Madhavan
      last_name: Vaidya
      email: admin@gmail.com
      role: 1
      phone: '9099882203'
      country_code: '+91'
      country_iso_code: in
      dob: 17-06-2024
      doj: 03-10-2022
      address: Devonshire
      city: Windsor
      state: 'ON'
      country: Canada
      zip: '123654'
      password: '12345678'
      password_confirmation: '12345678'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Profile details updated successfully.",
            "data": {
              "id": 7,
              "first_name": "Madhavan",
              "last_name": "Vaidya",
              "role": "admin",
              "email": "admin@gmail.com",
              "phone": "9099882203",
              "dob": "17-06-2024",
              "doj": "03-10-2022",
              "address": "Devonshire",
              "city": "Windsor",
              "state": "ON",
              "country": "Canada",
              "zip": "123654",
              "photo": "https://test-taskify.infinitietech.com/storage/photos/atEj9NKCeAJhM5VqBN69mFKHntHbZkPUl2Sa22RA.webp",
              "status": 1,
              "created_at": "03-01-2023 10:37:20",
              "updated_at": "13-08-2024 18:58:34",
              "assigned": {
                "projects": 11,
                "tasks": 21
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "Validation error: The email has already been taken."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "User not found",
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Profile details couldn\'t be updated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3fDE1c6aVZvgk5aeb64Phd8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/account/destroy
    metadata:
      groupName: 'Profile Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete account of a logged-in user.'
      description: 'This endpoint allows the authenticated user to delete their account.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Account deleted successfully."
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": true,
            "message": "User not found",
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Account couldn't be deleted."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5V6DZh68kv34cEdbePagf1a'
    controller: null
    method: null
    route: null
    custom: []
