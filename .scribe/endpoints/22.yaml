name: 'Notification Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/notifications/{id?}'
    metadata:
      groupName: 'Notification Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List or search notifications.'
      description: 'This endpoint retrieves a list of notifications based on various filters. The user must be authenticated to perform this action. The request allows filtering by status, type, user, client, and other parameters.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
    urlParameters:
      id:
        name: id
        description: 'optional The ID of the meeting to retrieve.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      search:
        name: search
        description: 'optional The search term to filter notifications by title, message and id.'
        required: false
        example: Alert
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      sort:
        name: sort
        description: 'optional The field to sort by. Defaults to "id". Sortable fields include: id, title, message, type, status, created_at, and updated_at.'
        required: false
        example: title
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      order:
        name: order
        description: 'optional The sort order, either "ASC" or "DESC". Defaults to "DESC".'
        required: false
        example: ASC
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      status:
        name: status
        description: 'optional The status of the notification to filter by. Can be "read" or "unread".'
        required: false
        example: unread
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      type:
        name: type
        description: 'optional The type of notifications to filter by.'
        required: false
        example: project
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      user_id:
        name: user_id
        description: 'optional The user ID to filter notifications by.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      client_id:
        name: client_id
        description: 'optional The client ID to filter notifications by.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      notification_type:
        name: notification_type
        description: 'optional The notification type to filter by. Can be "system" or "push".'
        required: false
        example: system
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      limit:
        name: limit
        description: 'optional The number of notifications per page for pagination.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      offset:
        name: offset
        description: 'optional The offset for pagination, indicating the starting point of results.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      search: Alert
      sort: title
      order: ASC
      status: unread
      type: project
      user_id: 1
      client_id: 5
      notification_type: system
      limit: 10
      offset: 0
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Notifications retrieved successfully",
            "total": 1,
            "data": [
              {
                "id": 116,
                "title": "Task Status Updated",
                "users": [
                  {
                    "id": 183,
                    "first_name": "Girish",
                    "last_name": "Thacker",
                    "photo": "https://test-taskify.infinitietech.com/storage/photos/no-image.jpg"
                  }
                ],
                "clients": [
                  {
                    "id": 102,
                    "first_name": "Test",
                    "last_name": "Client",
                    "photo": "https://test-taskify.infinitietech.com/storage/photos/no-image.jpg"
                  }
                ],
                "type": "Task",
                "type_id": 268,
                "message": "Madhavan Vaidya has updated the status of task sdff, ID:#268, from Default to Test From Pro.",
                "status": "Unread",
                "read_at": null,
                "created_at": "23-07-2024 17:50:09",
                "updated_at": "23-07-2024 19:08:16"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "Notification not found",
            "total": 0,
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "Notifications not found",
            "total": 0,
            "data": []
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zdab66gDP148hVE53ckvfea'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/notifications/destroy/{id}'
    metadata:
      groupName: 'Notification Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified notification.'
      description: 'This endpoint deletes a notification based on the provided ID. The user must be authenticated to perform this action.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
    urlParameters:
      id:
        name: id
        description: 'The ID of the notification to be deleted.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Notification deleted successfully.",
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "Notification not found.",
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "An error occurred while deleting the notification."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1Vc3fd4aZ65g8EDakbv6heP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/notifications/mark-as-read/{id?}'
    metadata:
      groupName: 'Notification Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Mark notification(s) as read.'
      description: |-
        This endpoint marks a specific notification as read if a notification ID is provided.
        If no ID is provided, it will mark all unread notifications as read for the authenticated user.
        The user must be authenticated to perform this action.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
    urlParameters:
      id:
        name: id
        description: 'optional The ID of the notification to mark as read.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Notification marked as read successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "All notifications marked as read successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": true,
            "message": "Notification not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Failed to mark notifications as read."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6bae36hVvdcfg1akZDP485E'
    controller: null
    method: null
    route: null
    custom: []
