name: 'Note Management'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/notes/store
    metadata:
      groupName: 'Note Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new note.'
      description: 'This endpoint creates a new note item with the specified title, color, and description. The user must be authenticated to perform this action.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the note.'
        required: true
        example: 'Meeting notes'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      color:
        name: color
        description: 'The color associated with the note. Must be one of "info", "warning", or "danger".'
        required: true
        example: warning
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      description:
        name: description
        description: 'optional A description of the note.'
        required: false
        example: 'Notes from the client meeting'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      title: 'Meeting notes'
      color: warning
      description: 'Notes from the client meeting'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "error": false,
          "message": "Note created successfully.",
          "id": 44,
          "data": {
            "id": 44,
            "title": "Test Note",
            "color": "info",
            "note_type" : "text|drawing",
            "drawing_data":"urlencoded(base64encoded(Svg)),
            "description": "test",
            "workspace_id": 6,
            "creator_id": "u_7",
            "created_at": "07-08-2024 16:24:57",
            "updated_at": "07-08-2024 16:24:57"
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "error": true,
            "message": "Validation errors occurred",
            "errors": {
              "title": [
                "The title field is required."
              ],
              "color": [
                "The color must be one of the following: info, warning, danger."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "An error occurred while creating the note."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Vv4Zcd583hEa6kgef1a6bDP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/notes/{id?}'
    metadata:
      groupName: 'Note Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List or search notes.'
      description: 'This endpoint retrieves a list of notes based on various filters. The user must be authenticated to perform this action. The request allows filtering by search term and pagination parameters.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
    urlParameters:
      id:
        name: id
        description: 'optional The ID of the note to retrieve.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      search:
        name: search
        description: 'optional The search term to filter notes by id, title, or description.'
        required: false
        example: Test
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      sort:
        name: sort
        description: 'optional The field to sort by. Defaults to "is_completed". All fields are sortable.'
        required: false
        example: created_at
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      order:
        name: order
        description: 'optional The sort order, either "asc" or "desc". Defaults to "desc".'
        required: false
        example: asc
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      limit:
        name: limit
        description: 'optional The number of notes per page for pagination. Defaults to 10.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      offset:
        name: offset
        description: 'optional The offset for pagination, indicating the starting point of results. Defaults to 0.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      search: Test
      sort: created_at
      order: asc
      limit: 10
      offset: 0
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "error": false,
              "message": "Notes retrieved successfully.",
              "total": 1,
              "data": [
                  {
                       "id": 43,
                       "title": "upper",
                       "color": "warning",
                       "description": "jhdcsd",
                       "workspace_id": 6,
                       "creator_id": "u_7",
                       "created_at": "07-08-2024 16:12:13",
                       "updated_at": "07-08-2024 16:12:13"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
              "error": true,
              "message": "Note not found.",
              "total": 0,
              "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "Notes not found",
            "total": 0,
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "error": true,
              "message": "An error occurred while retrieving the notes."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer efd4b6a3E1cVvkhP68D5agZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/notes/update
    metadata:
      groupName: 'Note Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing note.'
      description: 'This endpoint updates an existing note item with the specified title, color, and description. The user must be authenticated to perform this action.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The ID of the note to be updated.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      title:
        name: title
        description: 'The new title of the note.'
        required: true
        example: 'Meeting notes'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      color:
        name: color
        description: 'The new color of the note. Must be one of "info", "warning", or "danger".'
        required: true
        example: warning
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      description:
        name: description
        description: 'optional A new description for the note.'
        required: false
        example: 'Notes from the client meeting'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      id: 1
      title: 'Meeting notes'
      color: warning
      description: 'Notes from the client meeting'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "error": false,
          "message": "Note updated successfully.",
          "id": 44,
          "data": {
            "id": 44,
            "title": "Test Note",
            "color": "info",
            "description": "test",
            "workspace_id": 6,
            "creator_id": "u_7",
            "created_at": "07-08-2024 16:24:57",
            "updated_at": "07-08-2024 16:24:57"
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "error": true,
            "message": "Validation errors occurred",
            "errors": {
              "id": [
                "The id field is required."
              ],
              "title": [
                "The title field is required."
              ],
              "color": [
                "The color must be one of the following: info, warning, danger."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "An error occurred while updating the note."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gdv65EZ86b1akfDea3PVhc4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/notes/destroy/{id}'
    metadata:
      groupName: 'Note Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified note.'
      description: 'This endpoint deletes a note item based on the provided ID. The user must be authenticated to perform this action.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
    urlParameters:
      id:
        name: id
        description: 'The ID of the note to be deleted.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Note deleted successfully.",
            "id": 1,
            "title": "Note Title",
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "Note not found.",
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "An error occurred while deleting the note."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e4va6hEgd15PfcaVZ3D86bk'
    controller: null
    method: null
    route: null
    custom: []
