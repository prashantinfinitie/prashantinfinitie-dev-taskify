name: 'Task Comments'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/tasks/information/{id}/comments'
    metadata:
      groupName: 'Task Comments'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a comment with attachments.'
      description: |-
        This endpoint allows authenticated users to add comments to a specific model (e.g., tasks, projects).
        Users can also attach files and mention other users.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
      Content-Type: multipart/form-data
    urlParameters:
      id:
        name: id
        description: 'The ID of the information.'
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: voluptatem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      model_type:
        name: model_type
        description: 'The type of model being commented on (e.g., "Task", "Project").'
        required: true
        example: dolor
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      model_id:
        name: model_id
        description: 'The ID of the model being commented on.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      content:
        name: content
        description: 'The comment text.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_id:
        name: parent_id
        description: 'optional The ID of the parent comment (for replies).'
        required: false
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'attachments[]':
        name: 'attachments[]'
        description: 'optional An array of files to attach to the comment. Supported formats: jpg, jpeg, png, pdf, xlsx, txt, docx (max size: 2MB).'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      model_type: dolor
      model_id: 2
      content: et
      parent_id: 4
    fileParameters:
      'attachments[]': null
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Comment Added Successfully",
            "comment": {
              "id": 45,
              "commentable_type": "App\\Models\\Task",
              "commentable_id": 438,
              "content": "This is a sample comment with a mention @JohnDoe",
              "user_id": 7,
              "parent_id": null,
              "created_at": "2 minutes ago",
              "attachments": [
                {
                  "id": 1,
                  "file_name": "document.pdf",
                  "file_path": "comment_attachments/document.pdf",
                  "file_type": "application/pdf"
                }
              ]
            },
            "user": {
              "id": 7,
              "name": "John Doe"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Validation errors occurred",
            "errors": {
              "content": ["Please enter a comment."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Comment could not be added."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6Z34EvkcgVPD581eabf6ahd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tasks/comments/get/{id}'
    metadata:
      groupName: 'Task Comments'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get details of a specific comment.'
      description: 'This endpoint retrieves the details of a specific comment, including any attachments.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
    urlParameters:
      id:
        name: id
        description: 'The ID of the comment to retrieve.'
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 18
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Comment retrieved successfully.",
            "comment": {
              "id": 45,
              "commentable_type": "App\\Models\\Task",
              "commentable_id": 438,
              "content": "This is a sample comment with a mention @JohnDoe",
              "user_id": 7,
              "parent_id": null,
              "created_at": "2025-03-03 14:00:00",
              "updated_at": "2025-03-03 16:00:00",
              "attachments": [
                {
                  "id": 1,
                  "file_name": "document.pdf",
                  "file_path": "comment_attachments/document.pdf",
                  "file_type": "application/pdf"
                }
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": true,
            "message": "Comment not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Could not retrieve comment."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fekgb5d1aVv664cEZDP8ah3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tasks/comments/update
    metadata:
      groupName: 'Task Comments'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a comment.'
      description: 'This endpoint updates a specified comment. The user must be authenticated and have permission to modify the comment.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment to be updated.'
        required: true
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      content:
        name: content
        description: 'The updated content of the comment.'
        required: true
        example: beatae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      comment_id: 8
      content: beatae
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Comment updated successfully.",
            "id": 45,
            "type": "task"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": true,
            "message": "Comment not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "error": true,
            "message": "Validation errors occurred",
            "errors": {
              "content": ["Please enter a comment."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Comment couldn't be updated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z54Vah61DvePkdgE8c6fba3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/tasks/comments/destroy
    metadata:
      groupName: 'Task Comments'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a comment.'
      description: |-
        This endpoint deletes a specified comment and removes its attachments from storage.
        The user must be authenticated and have permission to delete comments.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment to delete.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      comment_id: 3
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Comment deleted successfully.",
            "id": 45,
            "type": "task"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": true,
            "message": "Comment not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "error": true,
            "message": "Validation errors occurred",
            "errors": {
              "comment_id": ["The comment_id field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Comment couldn't be deleted."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gEvbDd3keP58Zc64hVaf61a'
    controller: null
    method: null
    route: null
    custom: []
