name: 'User Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/users/{id?}'
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List or search users.'
      description: 'This endpoint retrieves a list of users based on various filters. The user must be authenticated to perform this action. The request allows filtering by status, search term, role, type, type_id, and other parameters.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
    urlParameters:
      id:
        name: id
        description: 'optional The ID of the user to retrieve.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      search:
        name: search
        description: 'optional The search term to filter users by id, first name, last name, phone, or email.'
        required: false
        example: John
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      sort:
        name: sort
        description: 'optional The field to sort by. Defaults to "id". Sortable fields include: id, phone, dob, doj, created_at, and updated_at.'
        required: false
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      order:
        name: order
        description: 'optional The sort order, either "ASC" or "DESC". Defaults to "DESC".'
        required: false
        example: ASC
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      status:
        name: status
        description: 'optional The status ID to filter users by, either 0 or 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      role_ids:
        name: role_ids
        description: 'optional The role IDs to filter users by.'
        required: false
        example:
          - 1
          - 2
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        custom: []
      type:
        name: type
        description: 'optional The type of filter to apply, either "project" or "task".'
        required: false
        example: project
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      type_id:
        name: type_id
        description: 'optional The ID associated with the type filter.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      limit:
        name: limit
        description: 'optional The number of users per page for pagination.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      offset:
        name: offset
        description: 'optional The offset for pagination, indicating the starting point of results.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      search: John
      sort: id
      order: ASC
      status: 1
      role_ids:
        - 1
        - 2
      type: project
      type_id: 3
      limit: 10
      offset: 0
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "error": false,
           "message": "Users retrieved successfully",
           "total": 1,
           "data": [
             {
            "id": 219,
            "first_name": "Test",
            "last_name": "Test",
            "role": "Member",
            "email": "test@gmail.com",
            "phone": "+91 1111111111",
            "dob": "09-08-2024",
            "doj": "09-08-2024",
            "address": "Test",
            "city": "Test",
            "state": "Test",
            "country": "Test",
            "zip": "111-111",
            "photo": "https://test-taskify.infinitietech.com/storage/photos/K0OAOzWyoeD0ZXBzgsaeHZUZERbOTKRljRIYOEYU.png",
            "status": 1,
            "created_at": "09-08-2024 17:04:29",
            "updated_at": "09-08-2024 17:04:29",
            "assigned": {
              "projects": 0,
              "tasks": 0
            }
             }
           ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "User not found",
            "total": 0,
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "Users not found",
            "total": 0,
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "Project not found",
            "total": 0,
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "Task not found",
            "total": 0,
            "data": []
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dV66aE35k8P4fa1hgbZDvce'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users/store
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new user.'
      description: 'This endpoint creates a new user with the provided details. The user must be authenticated to perform this action.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
      Content-Type: multipart/form-data
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'The first name of the user.'
        required: true
        example: John
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      last_name:
        name: last_name
        description: 'The last name of the user.'
        required: true
        example: Doe
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: 'The email address of the user.'
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The password for the user.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The password confirmation.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      address:
        name: address
        description: 'nullable The address of the user.'
        required: false
        example: '123 Main St'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone:
        name: phone
        description: 'nullable The phone number of the user.'
        required: false
        example: '1234567890'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      country_code:
        name: country_code
        description: 'nullable The country code for the phone number.'
        required: false
        example: '+91'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      country_iso_code:
        name: country_iso_code
        description: 'nullable The ISO code for the phone number.'
        required: false
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      city:
        name: city
        description: 'nullable The city of the user.'
        required: false
        example: 'New York'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      state:
        name: state
        description: 'nullable The state of the user.'
        required: false
        example: NY
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      country:
        name: country
        description: 'nullable The country of the user.'
        required: false
        example: USA
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      zip:
        name: zip
        description: 'nullable The ZIP code of the user.'
        required: false
        example: '10001'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      dob:
        name: dob
        description: 'nullable The date of birth of the user in the format specified in the general settings.'
        required: false
        example: '1990-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      doj:
        name: doj
        description: 'nullable The date of joining in the format specified in the general settings.'
        required: false
        example: '2024-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      role:
        name: role
        description: 'The ID of the role for the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      profile:
        name: profile
        description: 'nullable The profile photo of the user.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: |-
          0 or 1. If Deactivated (0), the user won't be able to log in to their account.
          Can only specify if `is_admin_or_has_all_data_access` is true for the logged-in user, else 0 will be considered by default.
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        custom: []
      require_ev:
        name: require_ev
        description: |-
          0 or 1. If Yes (1) is selected, the user will receive a verification link via email.
          Can only specify if `is_admin_or_has_all_data_access` is true for the logged-in user, else 1 will be considered by default.
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      first_name: John
      last_name: Doe
      email: john.doe@example.com
      password: password123
      password_confirmation: password123
      address: '123 Main St'
      phone: '1234567890'
      country_code: '+91'
      country_iso_code: in
      city: 'New York'
      state: NY
      country: USA
      zip: '10001'
      dob: '1990-01-01'
      doj: '2024-01-01'
      role: 1
      status: true
      require_ev: true
    fileParameters:
      profile: null
    responses:
      -
        status: 200
        content: |-
          {
          "error": false,
          "message": "User created successfully.",
          "id": 219,
          "data": {
            "id": 219,
            "first_name": "Test",
            "last_name": "Test",
            "role": "Member",
            "email": "test@gmail.com",
            "phone": "+91 1111111111",
            "dob": "09-08-2024",
            "doj": "09-08-2024",
            "address": "Test",
            "city": "Test",
            "state": "Test",
            "country": "Test",
            "zip": "111-111",
            "photo": "https://test-taskify.infinitietech.com/storage/photos/K0OAOzWyoeD0ZXBzgsaeHZUZERbOTKRljRIYOEYU.png",
            "status": 1,
            "created_at": "09-08-2024 17:04:29",
            "updated_at": "09-08-2024 17:04:29",
            "assigned": {
              "projects": 0,
              "tasks": 0
            }
          }

          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
          "error": true,
          "message": "Validation errors occurred",
          "errors": {
            "first_name": [
              "The first name field is required."
            ],
            "last_name": [
              "The last name field is required."
            ],
            "email": [
              "The email has already been taken."
            ]
          }

          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "User couldn’t be created, please make sure email settings are operational."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hEef4b6VPZ6dgvD5aa138kc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users/update
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing user.'
      description: 'This endpoint updates the details of an existing user. The user must be authenticated to perform this action.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
      Content-Type: multipart/form-data
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The ID of the user to be updated.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      first_name:
        name: first_name
        description: 'The first name of the user.'
        required: true
        example: John
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      last_name:
        name: last_name
        description: 'The last name of the user.'
        required: true
        example: Doe
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: 'The email address of the user.'
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'nullable The new password for the user. Can only be updated if `is_admin_or_has_all_data_access` is true for the logged-in user.'
        required: false
        example: newpassword123
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'required_with:password The password confirmation.'
        required: false
        example: newpassword123
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      address:
        name: address
        description: 'nullable The address of the user.'
        required: false
        example: '123 Main St'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone:
        name: phone
        description: 'nullable The phone number of the user.'
        required: false
        example: '1234567890'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      country_code:
        name: country_code
        description: 'nullable The country code for the phone number.'
        required: false
        example: '+91'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      country_iso_code:
        name: country_iso_code
        description: 'nullable The ISO code for the phone number.'
        required: false
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      city:
        name: city
        description: 'nullable The city of the user.'
        required: false
        example: 'New York'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      state:
        name: state
        description: 'nullable The state of the user.'
        required: false
        example: NY
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      country:
        name: country
        description: 'nullable The country of the user.'
        required: false
        example: USA
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      zip:
        name: zip
        description: 'nullable The ZIP code of the user.'
        required: false
        example: '10001'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      dob:
        name: dob
        description: 'nullable The date of birth of the user in the format specified in the general settings.'
        required: false
        example: '1990-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      doj:
        name: doj
        description: 'nullable The date of joining in the format specified in the general settings.'
        required: false
        example: '2024-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      role:
        name: role
        description: 'The ID of the role for the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      profile:
        name: profile
        description: 'nullable The new profile photo of the user.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: |-
          0 or 1. If Deactivated (0), the user won't be able to log in to their account.
          Can only specify status if `is_admin_or_has_all_data_access` is true for the logged-in user, else the current status will be considered by default.
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      id: 1
      first_name: John
      last_name: Doe
      email: john.doe@example.com
      password: newpassword123
      password_confirmation: newpassword123
      address: '123 Main St'
      phone: '1234567890'
      country_code: '+91'
      country_iso_code: in
      city: 'New York'
      state: NY
      country: USA
      zip: '10001'
      dob: '1990-01-01'
      doj: '2024-01-01'
      role: 1
      status: true
    fileParameters:
      profile: null
    responses:
      -
        status: 200
        content: |-
          {
          "error": false,
          "message": "User updated successfully.",
          "id": 219,
          "data": {
            "id": 219,
            "first_name": "APII",
            "last_name": "User",
            "role": "Member",
            "email": "test@gmail.com",
            "phone": "+91 1111111111",
            "dob": "09-08-2024",
            "doj": "09-08-2024",
            "address": "Test adr",
            "city": "Test cty",
            "state": "Test ct",
            "country": "test ctr",
            "zip": "111-111",
            "photo": "https://test-taskify.infinitietech.com/storage/photos/28NcF6qzmIRiOhN9zrtEu5x1iN55OBspR9o1ONMO.webp",
            "status": "1",
            "created_at": "09-08-2024 17:04:29",
            "updated_at": "09-08-2024 18:32:10",
            "assigned": {
              "projects": 14,
              "tasks": 12
            }
          }

          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
          "error": true,
          "message": "Validation errors occurred",
          "errors": {
            "first_name": [
              "The first name field is required."
            ],
            "last_name": [
              "The last name field is required."
            ],
            "email": [
              "The email has already been taken."
            ]
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "User couldn't be updated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3a4a1gVbP6k5vEef8ZhDc6d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/destroy/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified user.'
      description: 'This endpoint deletes a user based on the provided ID. The request must be authenticated to perform this action.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
    urlParameters:
      id:
        name: id
        description: 'The ID of the user to be deleted.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "User deleted successfully.",
            "id": "1",
            "title": "John Doe",
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "User not found.",
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "An internal server error occurred."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k6a4PfV8g5c1DEZbeh3dav6'
    controller: null
    method: null
    route: null
    custom: []
