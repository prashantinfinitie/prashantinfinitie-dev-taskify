name: 'Status Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/statuses/{id?}'
    metadata:
      groupName: 'Status Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List or search statuses.'
      description: 'This endpoint retrieves a list of statuses based on various filters. The user must be authenticated to perform this action. The request allows searching and sorting by different parameters.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
    urlParameters:
      id:
        name: id
        description: 'optional The ID of the status to retrieve.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      search:
        name: search
        description: 'optional The search term to filter statuses by title or id.'
        required: false
        example: Active
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      sort:
        name: sort
        description: 'optional The field to sort by. Defaults to "id". Sortable fields include: id, title, color, created_at, and updated_at.'
        required: false
        example: title
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      order:
        name: order
        description: 'optional The sort order, either "ASC" or "DESC". Defaults to "DESC".'
        required: false
        example: ASC
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      limit:
        name: limit
        description: 'optional The number of statuses per page for pagination.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      offset:
        name: offset
        description: 'optional The offset for pagination, indicating the starting point of results.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      search: Active
      sort: title
      order: ASC
      limit: 10
      offset: 0
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Statuses retrieved successfully",
            "total": 1,
            "data": [
              {
                "id": 1,
                "title": "Active",
                "color": "primary",
                "created_at": "20-07-2024 17:50:09",
                "updated_at": "21-07-2024 19:08:16"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "Status not found",
            "total": 0,
            "data": []
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "error": true,
            "message": "Statuses not found",
            "total": 0,
            "data": []
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1agZ36kcd8PVE6hab4vef5D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/status/store
    metadata:
      groupName: 'Status Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new status.'
      description: 'This endpoint allows authenticated users to create a new status with a unique slug and assign roles to it.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the status.'
        required: true
        example: eligendi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      color:
        name: color
        description: 'The color code associated with the status.'
        required: true
        example: eligendi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      role_ids:
        name: role_ids
        description: 'optional An array of role IDs to be associated with the status.'
        required: false
        example:
          - fugiat
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: eligendi
      color: eligendi
      role_ids:
        - fugiat
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Status created successfully.",
            "id": 101,
            "status": {
              "id": 101,
              "title": "In Progress",
              "color": "primary",
              "slug": "in-progress"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "error": true,
            "message": "Validation errors occurred.",
            "errors": {
              "title": ["The title field is required."],
              "color": ["The color field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Status couldn't be created."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ak15f36evZDgcEbPV8d46ah'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/status/update
    metadata:
      groupName: 'Status Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing status.'
      description: 'This endpoint allows authenticated users to update a status, including modifying the title, color, and associated roles.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The ID of the status to update.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      title:
        name: title
        description: 'The updated title of the status.'
        required: true
        example: ad
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      color:
        name: color
        description: 'The updated color code associated with the status.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      role_ids:
        name: role_ids
        description: 'optional An array of role IDs to associate with the status.'
        required: false
        example:
          - dolore
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      id: 10
      title: ad
      color: et
      role_ids:
        - dolore
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Status updated successfully.",
            "id": 101
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": true,
            "message": "Status not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "error": true,
            "message": "Validation errors occurred.",
            "errors": {
              "id": ["The id field is required."],
              "title": ["The title field is required."],
              "color": ["The color field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Status couldn't be updated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kadVDbfec84EvZ136hga65P'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/status/get/{id}'
    metadata:
      groupName: 'Status Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get details of a specific status.'
      description: 'This endpoint retrieves the details of a specific status, including the roles associated with it.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
    urlParameters:
      id:
        name: id
        description: 'The ID of the status to retrieve.'
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Status retrieved successfully.",
            "status": {
              "id": 101,
              "title": "In Progress",
              "color": "primary",
              "slug": "in-progress"
            },
            "roles": [1, 2, 3]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": true,
            "message": "Status not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Could not retrieve status."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1VDd646ac8EP5hbkga3vfeZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/status/destroy/{id}'
    metadata:
      groupName: 'Status Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a status.'
      description: |-
        This endpoint allows authenticated users to delete a specific status. Before deletion,
        all associated projects and tasks will be updated to have a default status ID of `0`.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Accept: application/json
      workspace_id: 1
    urlParameters:
      id:
        name: id
        description: 'The ID of the status to delete.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Status deleted successfully.",
            "id": 101,
            "title": "In Progress"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": true,
            "message": "Status not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Status couldn't be deleted."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5bPd6g6eaa1hcv8Ef43VDkZ'
    controller: null
    method: null
    route: null
    custom: []
