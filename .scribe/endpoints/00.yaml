name: 'User Authentication'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/users/signup
    metadata:
      groupName: 'User Authentication'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user.'
      description: 'This endpoint allows a new user to sign up by providing necessary details.'
      authenticated: false
      custom: []
    headers:
      Accept: application/json
      workspace_id: 1
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: "The type of account ('member' for team member, 'client' for client)."
        required: true
        example: member
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      first_name:
        name: first_name
        description: 'The first name of the user.'
        required: true
        example: John
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      last_name:
        name: last_name
        description: 'The last name of the user.'
        required: true
        example: Doe
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: 'The email address of the user or client.'
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The password for the account.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: "The confirmation of the password. Must match 'password'."
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      company:
        name: company
        description: 'nullable The company name.'
        required: false
        example: 'Acme Inc.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      fcm_token:
        name: fcm_token
        description: 'nullable The optional FCM token for push notifications.'
        required: false
        example: cXJ1AqT6B...
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      type: member
      first_name: John
      last_name: Doe
      email: john.doe@example.com
      password: password123
      password_confirmation: password123
      company: 'Acme Inc.'
      fcm_token: cXJ1AqT6B...
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "error": false,
          "message": "Account created successfully.",
          "data": {
          "id": 225,
          "first_name": "Test",
          "last_name": "User",
          "role": "admin",
          "email": "test.user@example.com",
          "phone": null,
          "dob": null,
          "doj": null,
          "address": null,
          "city": null,
          "state": null,
          "country": null,
          "zip": null,
          "photo": "https://test-taskify.infinitietech.com/storage/photos/no-image.jpg",
          "status": 0,
          "created_at": "13-08-2024 14:59:38",
          "updated_at": "13-08-2024 14:59:38"
          "assigned": {
          "projects": 0,
          "tasks": 0
          }
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "error": true,
            "message": "Validation errors occurred",
            "errors": {
              "email": ["The email field is required.", "The email has already been taken."],
              "password": ["The password must be at least 6 characters."],
              "role": ["The role field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Account couldn't be created, please contact the admin for assistance."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users/login
    metadata:
      groupName: 'User Authentication'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Log in an existing user.'
      description: 'This endpoint allows a user to log in by providing their email and password. Upon successful authentication, a token is returned for accessing protected resources.'
      authenticated: false
      custom: []
    headers:
      Accept: application/json
      workspace_id: 1
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The password for the user.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      fcm_token:
        name: fcm_token
        description: 'nullable The optional FCM token for push notifications.'
        required: false
        example: cXJ1AqT6B...
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      email: john.doe@example.com
      password: password123
      fcm_token: cXJ1AqT6B...
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "error": false,
            "message": "Logged in successfully.",
            "token": "15|ANl9HwfqiiUxdOmNWba5qKhzfk3h1fyi8ZUoYbH8de8d3534",
            "data": {
              "user_id": 7,
              "workspace_id": 6,
              "my_locale": "en",
              "locale": "en"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "error": true,
            "message": "Unauthorized"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "error": true,
            "message": "Validation errors occurred",
            "errors": {
              "email": ["The email field is required."],
              "password": ["The password field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/password/reset-request
    metadata:
      groupName: 'User Authentication'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Send Password Reset Link.'
      description: 'This endpoint allows a user or client to request a password reset link by providing their email and account type.'
      authenticated: false
      custom: []
    headers:
      Accept: application/json
      workspace_id: 1
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address of the user or client.'
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      account_type:
        name: account_type
        description: "The type of account ('user' for normal users, 'client' for clients)."
        required: true
        example: user
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      email: john.doe@example.com
      account_type: user
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "error": false,
          "message": "Password reset link emailed successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
          "error": true,
          "message": "Account not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Password reset link couldn't be sent, please check email settings."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/password/reset
    metadata:
      groupName: 'User Authentication'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reset Password.'
      description: 'This endpoint allows a user or client to reset their password using a valid token.'
      authenticated: false
      custom: []
    headers:
      Accept: application/json
      workspace_id: 1
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: 'The password reset token provided via the reset link.'
        required: true
        example: abc123
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: 'The email address of the user or client.'
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The new password for the account. Must be at least 6 characters and confirmed.'
        required: true
        example: newPassword123
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: "The confirmation of the new password. Must match 'password'."
        required: true
        example: newPassword123
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      account_type:
        name: account_type
        description: "The type of account ('user' for normal users, 'client' for clients)."
        required: true
        example: user
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      token: abc123
      email: john.doe@example.com
      password: newPassword123
      password_confirmation: newPassword123
      account_type: user
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "error": false,
          "message": "Password has been reset successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
          "error": true,
          "message": "Account not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": true,
            "message": "Password reset failed. Please try again later."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
